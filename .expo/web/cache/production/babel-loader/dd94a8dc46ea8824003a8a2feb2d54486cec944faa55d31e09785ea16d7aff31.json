{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{StatusBar}from\"expo-status-bar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{CheckBox,Input,Text,Button}from\"@rneui/themed\";import*as Font from\"expo-font\";import*as React from\"react\";import FontAwesome from\"@expo/vector-icons/FontAwesome\";import{useEffect,useState}from\"react\";import{createNativeStackNavigator}from\"@react-navigation/native-stack\";import{StackActions}from\"@react-navigation/native\";import AsyncStorage from\"@react-native-async-storage/async-storage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var styles=StyleSheet.create({container:{flex:1,backgroundColor:\"#fff\",paddingTop:0,paddingBottom:50,paddingHorizontal:20},button:{alignItems:\"center\",backgroundColor:\"#DDDDDD\",margin:5},addTaskContainer:{flexDirection:\"column\",alignItems:\"center\",position:\"absolute\",bottom:0,left:0,right:0,paddingHorizontal:20,paddingVertical:10,borderTopWidth:1,borderTopColor:\"#ccc\",backgroundColor:\"#f9f9f9\"}});function cacheFonts(_x){return _cacheFonts.apply(this,arguments);}function _cacheFonts(){_cacheFonts=_asyncToGenerator(function*(fonts){return fonts.map(function(){var _ref7=_asyncToGenerator(function*(font){return yield Font.loadAsync(font);});return function(_x3){return _ref7.apply(this,arguments);};}());});return _cacheFonts.apply(this,arguments);}var initTasks=[{description:\"Task1\",completed:true,key:1,relatedTasks:[2]},{description:\"Task2\",completed:true,key:2}];var Stack=createNativeStackNavigator();var TodoHomeScreen=function TodoHomeScreen(){var _useState=useState(initTasks),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showCompleted=_useState4[0],setShowCompleted=_useState4[1];useEffect(function(){function getValue(){return _getValue.apply(this,arguments);}function _getValue(){_getValue=_asyncToGenerator(function*(){var value=yield AsyncStorage.getItem(\"@tasks\");if(value===null){console.log(\"Storing serialized version of our tasks\"+JSON.stringify(tasks));}else{var parsedValue=JSON.parse(value);console.log(parsedValue);setTasks(JSON.parse(value));}});return _getValue.apply(this,arguments);}getValue();},[]);return _jsxs(Stack.Navigator,{initialRouteName:\"Todo List\",children:[_jsx(Stack.Screen,{name:\"Todo List\",children:function children(props){return _jsx(TodoScreen,_objectSpread(_objectSpread({},props),{},{tasks:tasks,setTasks:setTasks,showCompleted:showCompleted,setShowCompleted:setShowCompleted}));}}),_jsx(Stack.Screen,{name:\"Details\",children:function children(props){return _jsx(DetailsScreen,_objectSpread(_objectSpread({},props),{},{tasks:tasks,setTasks:setTasks}));}})]});};function DetailsScreen(_ref){var navigation=_ref.navigation,route=_ref.route,setTasks=_ref.setTasks,tasks=_ref.tasks;var _route$params$item=route.params.item,description=_route$params$item.description,completed=_route$params$item.completed,key=_route$params$item.key,relatedTasks=_route$params$item.relatedTasks;useEffect(function(){navigation.setOptions({title:description===\"\"?\"No title\":description});},[navigation]);return _jsxs(View,{style:{flex:1,alignItems:\"center\",justifyContent:\"center\"},children:[_jsx(Text,{children:\"Details Screen\"}),_jsx(Text,{children:description}),relatedTasks!==undefined&&relatedTasks.length>0?_jsxs(_Fragment,{children:[_jsx(Text,{children:\"Related Tasks:\"}),tasks.filter(function(task){return relatedTasks.includes(task.key);}).map(function(cTask){return _jsx(Button,{title:cTask.description,onPress:function onPress(){navigation.dispatch(StackActions.push(\"Details\",{item:cTask}));}},cTask.key);})]}):undefined]});}function TodoScreen(_ref2){var navigation=_ref2.navigation,tasks=_ref2.tasks,setTasks=_ref2.setTasks,showCompleted=_ref2.showCompleted,setShowCompleted=_ref2.setShowCompleted;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),fontsLoaded=_useState6[0],setFontsLoaded=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),input=_useState8[0],setInput=_useState8[1];useEffect(function(){function loadFonts(){return _loadFonts.apply(this,arguments);}function _loadFonts(){_loadFonts=_asyncToGenerator(function*(){yield cacheFonts([FontAwesome.font]);setFontsLoaded(true);});return _loadFonts.apply(this,arguments);}loadFonts();},[]);var updateTask=function(){var _ref3=_asyncToGenerator(function*(task){console.log(task);task.completed=!task.completed;setTasks(_toConsumableArray(tasks));yield AsyncStorage.setItem(\"@tasks\",JSON.stringify(tasks));});return function updateTask(_x2){return _ref3.apply(this,arguments);};}();var addTask=function(){var _ref4=_asyncToGenerator(function*(){var maxKey=0;tasks.forEach(function(task){if(task.key>maxKey){maxKey=task.key;}});var newTasks=[].concat(_toConsumableArray(tasks),[{description:input,completed:false,key:maxKey+1}]);setTasks(newTasks);console.log(newTasks);yield AsyncStorage.setItem(\"@tasks\",JSON.stringify(newTasks));setInput(\"\");});return function addTask(){return _ref4.apply(this,arguments);};}();function toggleShowCompleted(){setShowCompleted(!showCompleted);}function renderItem(_ref5){var item=_ref5.item;var deleteTask=function(){var _ref6=_asyncToGenerator(function*(){var updatedTasks=tasks.filter(function(task){return task.key!==item.key;});setTasks(updatedTasks);yield AsyncStorage.setItem(\"@tasks\",JSON.stringify(updatedTasks));});return function deleteTask(){return _ref6.apply(this,arguments);};}();if(!showCompleted&&item.completed){return null;}return _jsxs(View,{style:{flex:1,flexDirection:\"row\",margin:10},children:[_jsx(CheckBox,{textStyle:item.completed?{textDecorationLine:\"line-through\",textDecorationStyle:\"solid\"}:undefined,title:item.description,checked:item.completed,onPress:function onPress(){return updateTask(item);}}),_jsx(Button,{style:styles.button,title:\"Details\",onPress:function onPress(){return navigation.navigate(\"Details\",{item:item});}}),_jsx(Button,{style:styles.button,title:\"Delete\",onPress:deleteTask})]});}return fontsLoaded?_jsxs(View,{style:styles.container,children:[_jsx(StatusBar,{style:\"auto\"}),_jsx(Button,{onPress:function onPress(){return toggleShowCompleted();},children:_jsx(Text,{children:showCompleted?\"Hide Completed\":\"Show Completed\"})}),_jsx(FlatList,{style:{width:\"100%\"},data:tasks,renderItem:renderItem,keyExtractor:function keyExtractor(item){return item.key.toString();}}),_jsxs(View,{style:styles.addTaskContainer,children:[_jsx(Input,{onChangeText:setInput,value:input,placeholder:\"New Task...\"}),_jsx(Button,{title:\"Add Task\",onPress:addTask})]})]}):_jsx(View,{style:styles.container,children:_jsx(Text,{children:\"Loading...\"})});}export default TodoHomeScreen;","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","CheckBox","Input","Text","Button","Font","React","FontAwesome","useEffect","useState","createNativeStackNavigator","StackActions","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","styles","create","container","flex","backgroundColor","paddingTop","paddingBottom","paddingHorizontal","button","alignItems","margin","addTaskContainer","flexDirection","position","bottom","left","right","paddingVertical","borderTopWidth","borderTopColor","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x3","initTasks","description","completed","key","relatedTasks","Stack","TodoHomeScreen","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","showCompleted","setShowCompleted","getValue","_getValue","value","getItem","console","log","JSON","stringify","parsedValue","parse","Navigator","initialRouteName","children","Screen","name","props","TodoScreen","_objectSpread","DetailsScreen","_ref","navigation","route","_route$params$item","params","item","setOptions","title","style","justifyContent","undefined","length","filter","task","includes","cTask","onPress","dispatch","push","_ref2","_useState5","_useState6","fontsLoaded","setFontsLoaded","_useState7","_useState8","input","setInput","loadFonts","_loadFonts","updateTask","_ref3","_toConsumableArray","setItem","_x2","addTask","_ref4","maxKey","forEach","newTasks","concat","toggleShowCompleted","renderItem","_ref5","deleteTask","_ref6","updatedTasks","textStyle","textDecorationLine","textDecorationStyle","checked","navigate","width","data","keyExtractor","toString","onChangeText","placeholder"],"sources":["/Users/lillyallgood/Todo-App-1/TodoHomeScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View } from \"react-native\";\nimport { FlatList } from \"react-native\";\nimport { CheckBox, Input, Text, Button } from \"@rneui/themed\";\nimport * as Font from \"expo-font\";\nimport * as React from \"react\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { useEffect, useState } from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StackActions } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    paddingTop: 0,\n    paddingBottom: 50,\n    paddingHorizontal: 20,\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    margin: 5,\n  },\n  addTaskContainer: {\n    flexDirection: \"column\", \n    alignItems: \"center\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderTopColor: \"#ccc\",\n    backgroundColor: \"#f9f9f9\",\n  },\n});\n\nasync function cacheFonts(fonts) {\n  return fonts.map(async (font) => await Font.loadAsync(font));\n}\n\nlet initTasks = [\n  { description: \"Task1\", completed: true, key: 1, relatedTasks: [2] },\n  { description: \"Task2\", completed: true, key: 2 },\n];\n\nconst Stack = createNativeStackNavigator();\n\nconst TodoHomeScreen = () => {\n  let [tasks, setTasks] = useState(initTasks);\n  let [showCompleted, setShowCompleted] = useState(true);\n  useEffect(() => {\n    async function getValue() {\n      const value = await AsyncStorage.getItem(\"@tasks\");\n      if (value === null) {\n        console.log(\n          \"Storing serialized version of our tasks\" + JSON.stringify(tasks)\n        );\n      } else {\n        let parsedValue = JSON.parse(value);\n        console.log(parsedValue);\n        setTasks(JSON.parse(value));\n      }\n    }\n    getValue();\n  }, []);\n\n  return (\n    <Stack.Navigator initialRouteName=\"Todo List\">\n      <Stack.Screen name=\"Todo List\">\n        {(props) => (\n          <TodoScreen\n            {...props}\n            tasks={tasks}\n            setTasks={setTasks}\n            showCompleted={showCompleted}\n            setShowCompleted={setShowCompleted}\n          />\n        )}\n      </Stack.Screen>\n      <Stack.Screen name=\"Details\">\n        {(props) => (\n          <DetailsScreen {...props} tasks={tasks} setTasks={setTasks} />\n        )}\n      </Stack.Screen>\n    </Stack.Navigator>\n  );\n};\n\nfunction DetailsScreen({ navigation, route, setTasks, tasks }) {\n  let { description, completed, key, relatedTasks } = route.params.item;\n  useEffect(() => {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description,\n    });\n  }, [navigation]);\n\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Details Screen</Text>\n      <Text>{description}</Text>\n      {relatedTasks !== undefined && relatedTasks.length > 0 ? (\n        <>\n          <Text>Related Tasks:</Text>\n          {tasks\n            .filter((task) => relatedTasks.includes(task.key))\n            .map((cTask) => (\n              <Button\n                key={cTask.key}\n                title={cTask.description}\n                onPress={() => {\n                  navigation.dispatch(\n                    StackActions.push(\"Details\", { item: cTask })\n                  );\n                }}\n              />\n            ))}\n        </>\n      ) : undefined}\n    </View>\n  );\n}\n\nfunction TodoScreen({\n  navigation,\n  tasks,\n  setTasks,\n  showCompleted,\n  setShowCompleted,\n}) {\n\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  let [input, setInput] = useState(\"\");\n  useEffect(() => {\n    async function loadFonts() {\n      await cacheFonts([FontAwesome.font]);\n      setFontsLoaded(true);\n    }\n    loadFonts();\n  }, []);\n\n  let updateTask = async (task) => {\n    console.log(task);\n    task.completed = !task.completed;\n    setTasks([...tasks]);\n    await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n  };\n\n  let addTask = async () => {\n    let maxKey = 0;\n    tasks.forEach((task) => {\n      if (task.key > maxKey) {\n        maxKey = task.key;\n      }\n    });\n    let newTasks = [\n      ...tasks,\n      {\n        description: input,\n        completed: false,\n        key: maxKey + 1,\n      },\n    ];\n    setTasks(newTasks);\n    console.log(newTasks);\n    await AsyncStorage.setItem(\"@tasks\", JSON.stringify(newTasks));\n    setInput(\"\");\n  };\n\n  function toggleShowCompleted() {\n    setShowCompleted(!showCompleted);\n  }\n\n  function renderItem({ item }) {\n    const deleteTask = async () => {\n      const updatedTasks = tasks.filter((task) => task.key !== item.key);\n      setTasks(updatedTasks);\n      await AsyncStorage.setItem(\"@tasks\", JSON.stringify(updatedTasks));\n    };\n\n    if (!showCompleted && item.completed) {\n      return null;\n    }\n    return (\n      <View style={{ flex: 1, flexDirection: \"row\", margin: 10 }}>\n        <CheckBox\n          textStyle={\n            item.completed\n              ? {\n                  textDecorationLine: \"line-through\",\n                  textDecorationStyle: \"solid\",\n                }\n              : undefined\n          }\n          title={item.description}\n          checked={item.completed}\n          onPress={() => updateTask(item)}\n        />\n        <Button\n          style={styles.button}\n          title=\"Details\"\n          onPress={() => navigation.navigate(\"Details\", { item })}\n        />\n        <Button style={styles.button} title=\"Delete\" onPress={deleteTask} />\n      </View>\n    );\n  }\n\n  return fontsLoaded ? (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <Button onPress={() => toggleShowCompleted()}>\n        <Text>{showCompleted ? \"Hide Completed\" : \"Show Completed\"}</Text>\n      </Button>\n      <FlatList\n        style={{ width: \"100%\" }}\n        data={tasks}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.key.toString()}\n      />\n      <View style={styles.addTaskContainer}>\n        <Input\n          onChangeText={setInput}\n          value={input}\n          placeholder=\"New Task...\"\n        ></Input>\n        <Button title=\"Add Task\" onPress={addTask} />\n      </View>\n    </View>\n  ) : (\n    <View style={styles.container}>\n      <Text>Loading...</Text>\n    </View>\n  );\n}\n\nexport default TodoHomeScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
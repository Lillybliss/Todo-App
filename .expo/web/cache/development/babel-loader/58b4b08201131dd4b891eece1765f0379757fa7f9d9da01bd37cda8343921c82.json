{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button, Text } from \"@rneui/themed\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonContainer: {\n    width: \"80%\",\n    marginVertical: 10\n  },\n  button: {\n    width: \"100%\",\n    textAlign: \"center\"\n  }\n});\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var loginKey = \"loginData\";\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var enteredUsername = username;\n      var enteredPassword = password;\n      var loginData = JSON.parse(yield AsyncStorage.getItem(loginKey));\n      var user = loginData.find(function (user) {\n        return user.username === enteredUsername && user.password === enteredPassword;\n      });\n      if (user) {\n        console.log(\"Login successful.\");\n        navigation.navigate(\"Home\", {\n          email: user.email,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          password: user.password,\n          phone: user.phone,\n          username: user.username,\n          zip: user.zip\n        });\n      } else {\n        console.log(\"Incorrect username or password.\");\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(\"h1\", {\n      children: \"My To-Do App\"\n    }), _jsx(Input, {\n      onChangeText: setUsername,\n      value: username,\n      testID: \"login-username\",\n      placeholder: \"Username...\"\n    }), _jsx(Input, {\n      onChangeText: setPassword,\n      value: password,\n      testID: \"login-password\",\n      placeholder: \"Password...\"\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(Button, {\n        style: styles.button,\n        title: \"Login\",\n        testID: \"login-button\",\n        onPress: handleLogin\n      })\n    }), _jsx(Text, {\n      children: \"Don't already have an account?\"\n    }), _jsx(View, {\n      style: styles.buttonContainer,\n      children: _jsx(Button, {\n        style: styles.button,\n        title: \"Register\",\n        testID: \"login-register\",\n        onPress: function onPress() {\n          return navigation.push(\"Registration\");\n        }\n      })\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["Input","Button","Text","React","useState","AsyncStorage","jsx","_jsx","jsxs","_jsxs","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","buttonContainer","width","marginVertical","button","textAlign","LoginScreen","_ref","navigation","loginKey","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref2","_asyncToGenerator","enteredUsername","enteredPassword","loginData","JSON","parse","getItem","user","find","console","log","navigate","email","firstName","lastName","phone","zip","apply","arguments","View","style","children","onChangeText","value","testID","placeholder","title","onPress","push"],"sources":["/Users/lillyallgood/Todo-App-1/LoginScreen.js"],"sourcesContent":["import { StyleSheet, View } from \"react-native\";\nimport { Input, Button, Text } from \"@rneui/themed\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonContainer: {\n    width: \"80%\",\n    marginVertical: 10,\n  },\n  button: {\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n});\n\nconst LoginScreen = ({ navigation }) => {\n  // define key for login data:\n  const loginKey = \"loginData\";\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // use handleLogin to authenticate the user\n  const handleLogin = async () => {\n    const enteredUsername = username;\n    const enteredPassword = password;\n    // Get existing login data from storage\n    const loginData = JSON.parse(await AsyncStorage.getItem(loginKey));\n    // validation:\n    const user = loginData.find(\n      (user) =>\n        user.username === enteredUsername && user.password === enteredPassword\n    );\n\n    if (user) {\n      console.log(\"Login successful.\");\n      navigation.navigate(\"Home\", {\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        password: user.password,\n        phone: user.phone,\n        username: user.username,\n        zip: user.zip,\n      });\n    } else {\n      console.log(\"Incorrect username or password.\");\n    }\n  };\n\n  return (\n    <View style={[styles.container]}>\n      <h1>My To-Do App</h1>\n      <Input\n        onChangeText={setUsername}\n        value={username}\n        testID=\"login-username\"\n        placeholder=\"Username...\"\n      ></Input>\n      <Input\n        onChangeText={setPassword}\n        value={password}\n        testID=\"login-password\"\n        placeholder=\"Password...\"\n      ></Input>\n      <View style={styles.buttonContainer}>\n        <Button\n          style={styles.button}\n          title=\"Login\"\n          testID=\"login-button\"\n          onPress={handleLogin}\n        />\n      </View>\n      <Text>Don't already have an account?</Text>\n      <View style={styles.buttonContainer}>\n        <Button\n          style={styles.button}\n          title=\"Register\"\n          testID=\"login-register\"\n          onPress={() => navigation.push(\"Registration\")}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}